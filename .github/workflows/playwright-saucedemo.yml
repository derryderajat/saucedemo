name: Saucedemo

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 11 * * *' # setiap hari jam 18:00 WIB

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      REPORT_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Create .env file from secrets
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" > .env
          echo "SAUCE_USERNAME=${{ secrets.SAUCE_USERNAME }}" >> .env
          echo "SAUCE_PASSWORD=${{ secrets.SAUCE_PASSWORD }}" >> .env

      - name: Install Allure commandline
        run: npm install -g allure-commandline

      # 🟩 Restore Allure History
      - name: Restore previous Allure history
        run: |
          echo "Fetching previous history from gh-pages..."
          git clone --depth 1 --branch gh-pages https://github.com/${{ github.repository }}.git gh-pages || echo "no previous report"
          
          if [ -d "gh-pages/allure-report/history" ]; then
            mkdir -p ./allure-results/history
            cp -r gh-pages/allure-report/history ./allure-results/history
            echo "✅ Restored history from gh-pages/allure-report/history"
          elif [ -d "gh-pages/history" ]; then
            mkdir -p ./allure-results/history
            cp -r gh-pages/history ./allure-results/history
            echo "✅ Restored history from gh-pages/history"
          else
            echo "⚠️ No previous history found"
          fi
      
          echo "📁 After restore, allure-results:"
          ls -R ./allure-results || true


      # Jalankan test
      - name: Run Playwright tests
        run: npx playwright test
        continue-on-error: true

      # Generate report baru dengan history
      - name: Generate Allure HTML report
        run: |
          allure generate ./allure-results --clean -o ./allure-report
          echo "✅ Allure report generated"

      # 🟨 Simpan kembali history untuk next run
      - name: Preserve Allure history
        run: |
          if [ -d "./allure-report/history" ]; then
            cp -r ./allure-report/history ./allure-results/history
            echo "✅ History copied for next run"
          else
            echo "⚠️ No history folder found in new report"
          fi


      # Upload artifact (optional)
      - name: Upload Allure HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # Deploy ke GitHub Pages (tanpa hapus history)
      - name: Deploy Allure HTML report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          keep_files: true

      # Email notifikasi hasil test
      - name: Send email notification with report link (SMTP)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: 587
          username: ${{ secrets.EMAIL_HOST }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Daily Report: Testing Results Saucedemo"
          body: |
            Dear Team,

            Berikut hasil testing terbaru.
            🔗 Allure report: ${{ env.REPORT_URL }}
            🔗 Workflow run: ${{ github.run_url }}

          to: ${{ secrets.EMAIL_DESTINATION }}
          from: ${{ secrets.EMAIL_HOST }}
          secure: false

      # Kirim notifikasi ke Teams
      - name: Notify Teams with Allure report link
        env:
          REPORT_URL: ${{ env.REPORT_URL }}
          RUN_URL: ${{ github.run_url }}
        run: |
          cat > payload.json <<EOF
          {
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "summary": "Playwright Test Report",
            "themeColor": "0076D7",
            "title": "Playwright Tests - ${{ github.repository }}",
            "sections": [
              {
                "activityTitle": "Test run finished",
                "activitySubtitle": "Branch: ${{ github.ref_name }}",
                "facts": [
                  { "name": "Repository", "value": "${{ github.repository }}" },
                  { "name": "Report", "value": "${{ env.REPORT_URL }}" },
                  { "name": "Run", "value": "${{ github.run_url }}" }
                ],
                "text": "Click the button below to open the Allure report."
              }
            ],
            "potentialAction": [
              {
                "@type": "OpenUri",
                "name": "Open Allure Report",
                "targets": [
                  { "os": "default", "uri": "${{ env.REPORT_URL }}" }
                ]
              },
              {
                "@type": "OpenUri",
                "name": "Open Workflow Run",
                "targets": [
                  { "os": "default", "uri": "${{ github.run_url }}" }
                ]
              }
            ]
          }
          EOF

          curl -H "Content-Type: application/json" \
               -d @payload.json \
               "${{ secrets.TEAMS_CHANNEL }}"
